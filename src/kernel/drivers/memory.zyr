#library

// In: AX, BX, CX - Starting location, ending location, bytes to copy
// Out: BX - CX bytes from AX

func kernel_memory_copy() {
	push_all();
	loop:
		do kernel_memory_copy_done() if cx == 0;
		
		push(bx);
		bx = ax;
		dx = [bx];
		pop(bx);
		[bx] = dx;
		ax ++;
		bx ++;
		cx --;
}

func kernel_memory_copy_done() {
	pop_all();
	return;
}

// In: AX, BX - Buffer location, bytes to zero
func kernel_memory_erase() {
	push_all();
	cx = bx;
	bx = ax;
	ax = 0;
	
	loop;
	do kernel_memory_erase_done() if cx == 0;
	[bx] = ax;
	bx ++;
	cx --;
}

func kernel_memory_erase_done() {
	pop_all();
	return;
}
